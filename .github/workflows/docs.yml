name: Publish Documentation

on:
  push:
    branches:
      - main
      - dev
    paths:
      # Core
      - docs/**
      - mkdocs.yml

      # Dependencies
      - pyproject.toml
      - poetry.lock

      # Workflows
      - .github/workflows/docs.yml

      # Snippets Files
      - CHANEGLOG.md
      - Dockerfile
      - .dockerignore

  workflow_dispatch:

jobs:
  build:
    name: Build Documentation
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Get Token
        id: nodoka
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.NODOKA_ID }}
          private_key: ${{ secrets.NODOKA_PASSWORD }}
          permissions: >-
            {
              "contents": "read",
              "packages": "read"
            }

      - name: Get Token (cont.)
        run: echo "GH_TOKEN=${{ steps.nodoka.outputs.token }}" >> $GITHUB_ENV

      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11.1

      - name: Install Poetry
        run: pipx install poetry==$(python poet.py)

      - name: Save Cache
        uses: actions/cache@v3
        with:
          key: ${{ github.ref }}
          path: .cache

      - name: Install Dependencies
        run: poetry install --no-root --only docs && poetry run poe fontawesome
        env:
          POETRY_REPOSITORIES_MATERIAL_INSIDERS_URL: https://github.com/squidfunk/mkdocs-material-insiders
          POETRY_HTTP_BASIC_MATERIAL_INSIDERS_USERNAME: celsiusnarhwal
          POETRY_HTTP_BASIC_MATERIAL_INSIDERS_PASSWORD: ${{ secrets.GH_TOKEN }}
          FONTAWESOME_NPM_AUTH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Build Documentation
        run: poetry run mkdocs build

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          path: site
          name: site

  deploy:
    name: Deploy Documentation
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: site
          path: site

      - name: Deploy Documentation
        run: npx vercel --yes --cwd site --token ${{ secrets.VERCEL_TOKEN }} ${{ github.ref_name == 'main' && '--prod' || '' }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
